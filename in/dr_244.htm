<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">

<html>
  <head>
    <meta name="generator" content=
    "HTML Tidy for Windows (vers 1st August 2002), see www.w3.org">

    <title>Defect report #244</title>
  </head>

  <body>
    <h2 align="center">Defect Report #244</h2>
    <a href="dr_243.htm">Previous Defect Report</a> &lt; - &gt; <a
    href="dr_245.htm">Next Defect Report</a> 

    <p><br>
     <b>Submitter:</b> Fred Tydeman (US)<br>
     <b>Submission Date:</b> 2001-02-25<br>
     <b>Source:</b><br>
     <b>Reference Document:</b> <a href=
    "http://www.open-std.org/JTC1/SC22/WG14/www/docs/n943.txt">ISO/IEC
    WG14 N943</a><br>
     <b>Version:</b> 1.1<br>
     <b>Date:</b> 2001-10-16 12:50:00<br>
     <b>Subject:</b> <tt><b>tgamma(zero or negative
    integer)</b></tt> should be considered a pole error.</p>

    <p><b>Summary</b></p>

    <blockquote>
      <tt><b>tgamma(zero or negative integer)</b></tt>should be
      considered a pole error since the correct mathematical result
      is an exact infinity (whose sign depends upon the side that
      the limit is taken from). Annex F already does this for the
      zero argument case.
    </blockquote>

    <p><b>Details</b></p>

    <blockquote>
      When the correct mathematical result is an exact infinity
      (from finite arguments), it is considered a pole or
      singularity error. This is true if the result's sign is
      independent of the direction of the limit. It is believed to
      be true that it still is a pole error if the sign of the
      infinite result depends upon the direction of the limit. 

      <p>Some symbolic math packages support the concept of
      +/-infinity in addition to +infinity and -infinity, and in
      those, <tt><b>tgamma(zero or negative integer)</b></tt> is
      +/-infinity.</p>

      <p>Since +/-infinity cannot be represented in most (all?)
      floating-point formats, return +infinity for that value.</p>

      <p>LIA-2 treats similar cases (math function with exact
      non-zero integer argument and a result of +/-infinity, such
      as tan(90 degrees)) as a pole error with the result of signed
      infinity.</p>

      <p><u>Counter-argument</u>: For <tt><b>0.0</b></tt> we have
      the luxury of <tt><b>+0.0</b></tt> and <tt><b>-0.0</b></tt>.
      Non-zero integers don't have "sides". There is no concept of
      +/-infinity in IEC 60559 (nor any other hardware
      floating-point representation), just +infinity and -infinity.
      If there is no one correct result for a given argument, then
      that case must be considered an invalid operation or a domain
      error. <tt><b>tgamma(negative integer)</b></tt> has two
      results (+infinity or -infinity), so must be considered
      invalid. <tt><b>tgamma(x)</b></tt>, as <tt><b>x</b></tt>
      approaches -infinity, has no unique limit, so must also be
      considered invalid.</p>
    </blockquote>

    <p><b>Suggested Technical Corrigendum</b><br>
    </p>

    <p>In 7.12.8.4 <tt><b>tgamma</b></tt>:</p>

    <p>Change:</p>

    <blockquote>
      A domain error occurs if <tt><b>x</b></tt> is a negative
      integer or if the result cannot be represented when
      <tt><b>x</b></tt> is zero.
    </blockquote>
    to 

    <blockquote>
      A range error may occur if <tt><b>x</b></tt> is a negative
      integer or zero.
    </blockquote>

    <p>In F.9.5.4 <tt><b>tgamma</b></tt>:</p>

    <p>Change:</p>

    <blockquote>
      <tt><b>tgamma(x)</b></tt> returns a <tt><b>NaN</b></tt> and
      raises the "invalid" floating-point exception for
      <tt><b>x</b></tt> a negative integer.
    </blockquote>
    to 

    <blockquote>
      <tt><b>tgamma(x)</b></tt> returns <tt><b>+INF</b></tt> and
      raises the "divide-by-zero" floating-point exception for
      <tt><b>x</b></tt> a negative integer.
    </blockquote>
    Change: 

    <blockquote>
      <tt><b>tgamma(-INF)</b></tt> returns a <tt><b>NaN</b></tt>
      and raises the "invalid" floating-point exception.
    </blockquote>
    to 

    <blockquote>
      <tt><b>tgamma(-INF)</b></tt> returns <tt><b>+INF</b></tt> and
      raises the "divide-by-zero" floating-point exception.
    </blockquote>
    <hr>

    <p><b>Technical Corrigendum</b><br>
    </p>

    <p>In 7.12.8.4 <tt><b>tgamma</b></tt>:</p>

    <p>Change:</p>

    <blockquote>
      A domain error occurs if <tt><b>x</b></tt> is a negative
      integer or if the result cannot be represented when
      <tt><b>x</b></tt> is zero.
    </blockquote>
    to 

    <blockquote>
      A domain error or range error may occur if <tt><b>x</b></tt>
      is a negative integer or zero.
    </blockquote>

    <p><br>
     <a href="dr_243.htm">Previous Defect Report</a> &lt; - &gt; <a
    href="dr_245.htm">Next Defect Report</a></p>
  </body>
</html>

