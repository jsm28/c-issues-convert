<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">

<html>
  <head>
    <meta name="generator" content=
    "HTML Tidy for Windows (vers 1st August 2002), see www.w3.org">

    <title>Defect report #319</title>
  </head>

  <body>
    <h2 align="center">Defect Report #319</h2>
    <a href="dr_318.htm">Previous Defect Report</a> &lt; - &gt; <a
    href="dr_320.htm">Next Defect Report</a> 

    <p><br>
     <b>Submitter:</b> Fred Tydeman (USA)<br>
     <b>Submission Date:</b> 2005-04-04<br>
     <b>Source:</b> WG 14<br>
     <b>Reference Document:</b> <a href=
    "http://www.open-std.org/JTC1/SC22/WG14/www/docs/n1094.txt">ISO/IEC
    WG14 N1094</a><br>
     <b>Version:</b> 1.3<br>
     <b>Date:</b> 2006-04-04<br>
     <b>Subject:</b> printf("%a", 1.0) and trailing zeros</p>

    <p><b>Summary</b></p>

    <p>Given that <b>FLT_RADIX</b> is 2, what is the output of:</p>
<pre>
  double x = 1.0;
  printf("%a", x);
</pre>
    In particular, are trailing zeros removed or kept? <br>
     <br>
     

    <p>Some choices that occur to me are:</p>

    <ol>
      <li>use the smallest precision for an exact representation of
      this particular value; in effect, remove trailing zeros.</li>

      <li>use the smallest precision for an exact representation of
      all values of this type; in effect, keep trailing zeros.</li>

      <li>use the smallest precision for an exact representation of
      all values of all floating-point types; in effect, promote to
      long double and keep trailing zeros.</li>

      <li>implementation defined.</li>

      <li>unspecified.</li>

      <li>something else.</li>
    </ol>

    <p>Some implementations that I have seen do 1, others do 2, and
    one does both 1 and 2 (value and format dependent). I believe
    choice 1 is the intended behaviour.</p>

    <p>Another way to look at this is: should <b>%a</b> act like
    <b>%e</b> (keep trailing zeros) or <b>%g</b> (remove trailing
    zeros) with respect to trailing zeros? Should this behaviour
    depend upon the user specifing a precision?</p>

    <p>Some parts of <b>7.19.6.1 The fprintf function</b> that are
    relavent are:</p>

    <p>Paragraph 6 on the '<b>#</b>' flag has: "For <b>g</b> and
    <b>G</b> conversions, trailing zeros are <i>not</i> removed
    from the result."</p>

    <p>Paragraph 8, section <b>e,E</b>, has: "... if the precision
    is zero and the <b>#</b> flag is not specified, no
    decimal-point character appears."</p>

    <p>Paragraph 8, section <b>g,G</b>, has: "Trailing zeros are
    removed from the fractional portion of the result unless the
    <b>#</b> flag is specified; a decimal-point character appears
    only if it is followed by a digit."</p>

    <p>Paragraph 8, section <b>a,A</b>, has: "... if the precision
    is missing and <b>FLT_RADIX</b> is a power of 2, then the
    precision is sufficient for an exact representation of the
    value; ..."</p>

    <p>Paragraph 8, section <b>a,A</b>, has: "... if the precision
    is missing and <b>FLT_RADIX</b> is not a power of 2, then the
    precision is sufficient to distinguish values of type
    <b>double</b>, except that trailing zeros may be omitted;
    ..."</p>

    <p>There are corresponding sections for the wide character
    versions of the functions in <b>7.24.2.1 The fwprintf
    function</b>.</p>

    <p><b>Suggested Technical Corrigendum</b></p>

    <p>Change <b>7.19.6.1 The fprintf function</b> sections as
    follows.</p>

    <p>Paragraph 6 on the '<b>#</b>' flag, change the above to:
    "For <b>a</b>, <b>A</b>, <b>g</b> and <b>G</b> conversions,
    trailing zeros are <i>not</i> removed from the result."</p>

    <p>Paragraph 8, section <b>a,A</b>, change the above to: "...
    if the precision is missing and <b>FLT_RADIX</b> is a power of
    2, then the precision is the minimum sufficient for an exact
    representation of all values of type <b>double</b> (removal of
    trailing zeros depends upon the <b>#</b> flag); ..."</p>

    <p>Paragraph 8, section <b>a,A</b>, change the above to: "...
    if the precision is missing and <b>FLT_RADIX</b> is not a power
    of 2, then the precision is the minimum sufficient to
    distinguish values of type <b>double</b> (removal of trailing
    zeros depends upon the <b>#</b> flag); ..."</p>

    <p>Also, update the corresponding sections for the wide
    character versions of the functions in <b>7.24.2.1 The fwprintf
    function</b>.</p>

    <p>Add to the Rationale in section 7.19.6.1: <b>%a</b> (without
    an explicit precision) acts like <b>%g</b> (removes trailing
    zeros), while <b>%.*a</b> (with an explicit precision) acts
    like <b>%e</b> (keeps trailing zeros). This was done to allow
    two forms of behaviour while using only one conversion
    specifier.</p>
    <hr>
    <br>
     

    <p><b>Committee Response</b></p>
    The Committee does not believe this is a defect, however the
    Committee may consider establishing a rule for removing or not
    removing trailing zeros at some point in the future. 

    <p><br>
     <a href="dr_318.htm">Previous Defect Report</a> &lt; - &gt; <a
    href="dr_320.htm">Next Defect Report</a></p>
  </body>
</html>

