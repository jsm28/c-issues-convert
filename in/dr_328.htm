<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">

<html>
<head>
  <meta name="generator" content=
  "HTML Tidy for Mac OS X (vers 1st December 2004), see www.w3.org">

  <title>Defect report #328</title>
  <meta http-equiv="Content-Type" content=
  "text/html; charset=us-ascii">
</head>

<body>
  <br>

  <h2 align="center">Defect Report #328</h2><a href=
  "dr_327.htm">Previous Defect Report</a> &lt; - &gt; <a href=
  "dr_329.htm">Next Defect Report</a>

  <p><br>
  <b>Submitter:</b> Project Editor (Larry Jones)<br>
  <b>Submission Date:</b> 2006-06-03<br>
  <!-- yyyy-mm-dd -->
   <b>Source:</b> &lt;whyglinux@gmail.com&gt;<br>
  <b>Reference Document:</b> N/A<br>
  <b>Version:</b> 1.2<br>
  <b>Date:</b> 2007-10-10<br>
  <b>Subject:</b> String literals in compound literal
  initialization</p>

  <p><b>Summary</b></p>6.5.2.5 Compound literals, paragraph 3 in
  ISO/IEC 9899:1999 C Standard says:

  <blockquote>
    If the compound literal occurs outside the body of a function,
    the initializer list shall consist of constant expressions.
  </blockquote>This is to say a string literal, which is neither a
  constant nor a constant expression, can not be taken to
  initialize a compound literal with static storage duration.
  However, this is not the fact.

  <p>String literals can not be constants because they are not
  among constants (defined in Section 6.4.4). When a string literal
  is used to initialize a compound literal (in the case an array
  type), the array-to-pointer conversion does not occur (6.3.2.1
  Lvalues, arrays, and function designators, paragraph 3), and
  hence the string literal can not be an address constant, which is
  the only chance to become a constant expression.</p>

  <p>Obviously string literals should be mentioned together with
  constant expressions. It should be:</p>

  <blockquote>
    If the compound literal occurs outside the body of a function,
    the initializer list shall consist of constant expressions or
    string literals.
  </blockquote>

  <p>The following paragraph excerpted from Page 125, 6.7.8-4 seems
  to support the above correction:</p>

  <blockquote>
    All the expressions in an initializer for an object that has
    static storage duration shall be constant expressions or string
    literals.
  </blockquote>

  <p><b>Suggested Technical Corrigendum</b><br></p>

  <p>Change 6.5.2.5, paragraph 3, to:</p>

  <blockquote>
    If the compound literal occurs outside the body of a function,
    the initializer list shall consist of constant expressions or
    string literals.
  </blockquote>
  <hr>
  <!-- Entires below the line by WG14 only. -->

  <p><b>Proposed Technical Corrigendum</b><br></p>

  <p>Replace 6.5.2.5 paragraph 2 and 3 to:</p>

  <blockquote>
    All the constraints for initializer lists in 6.7.8 are
    applicable to compound literals.
  </blockquote>

  <p>Change 6.5.2.5 paragraph 7 to:</p>

  <blockquote>
    All the semantic rules for initializers lists in 6.7.8 are
    applicable to compound literals.<sup>82)</sup>
  </blockquote>

  <p><br>
  <a href="dr_327.htm">Previous Defect Report</a> &lt; - &gt;
  <a href="dr_329.htm">Next Defect Report</a></p>
</body>
</html>
